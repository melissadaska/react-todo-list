{"version":3,"sources":["Components/DataProvider.js","Components/FormInput.js","Components/ListItem.js","Components/List.js","Components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","DataProvider","props","useState","todos","setTodos","useEffect","todoStore","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","children","FormInput","useContext","todoName","setTodoName","autoComplete","onSubmit","e","preventDefault","name","complete","type","id","required","placeholder","onChange","target","ListItem","todo","checkComplete","handleEditTodos","onEdit","setOnEdit","editValue","setEditValue","toLowerCase","onClick","handleSave","htmlFor","className","checked","disabled","List","switchComplete","newTodos","forEach","index","editvalue","map","Footer","checkAll","setCheckAll","length","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3e9b608.chunk.js","sourcesContent":["import React, {useState, useEffect, createContext} from 'react';\n\nexport const DataContext = createContext();\n\nexport const DataProvider = (props) => {\n    const [todos, setTodos] = useState([])\n\n    useEffect (() => {\n        const todoStore = JSON.parse(localStorage.getItem('todoStore'))\n        if(todoStore) setTodos(todoStore)\n    },[])\n\n    useEffect (() => {\n        localStorage.setItem('todoStore', JSON.stringify(todos))\n    }, [todos])\n\n    return (\n        <DataContext.Provider value={[todos, setTodos]}>\n            {props.children}\n        </DataContext.Provider>\n    )\n}\n","import React, {useState, useContext } from 'react';\nimport { DataContext } from './DataProvider'\n\nexport default function FormInput() {\n    const [todos, setTodos ] = useContext(DataContext);\n    const [todoName, setTodoName] = useState('');\n\n    const addTodo = e => {\n        e.preventDefault();\n        setTodos([...todos, {name: todoName, complete: false}])\n        setTodoName('');\n    }\n\n    return (\n        <div>\n           <form autoComplete=\"off\" onSubmit={addTodo}>\n                <input type=\"text\" name=\"todos\" id=\"todos\"\n                required placeholder=\"What needs to be done?\" value={todoName}\n                onChange={e => setTodoName(e.target.value)}/>\n                <button type=\"submit\">Create</button>\n            </form> \n        </div>\n    )\n}\n","import React, {useState} from 'react';\n\nexport default function ListItem({todo, id, checkComplete, handleEditTodos}) {\n    const [onEdit, setOnEdit] = useState(false)\n    const [editValue, setEditValue] = useState(todo.name)\n\n    const handleOnEdit = () => {\n        setOnEdit(true)\n    }\n\n    const handleSave = id => {\n        setOnEdit(false)\n        if (editValue) {\n            handleEditTodos(editValue, id)\n        } else {\n            setEditValue(todo.name)\n        }\n    }\n\n    if(onEdit) {\n        return (\n            \n                <li>\n                    \n                    <input type=\"text\" id=\"editValue\" value={editValue} name=\"editValue\" \n                    onChange={e => setEditValue(e.target.value.toLowerCase())}/>\n                    <button onClick={() => handleSave(id)}>Save</button>\n                </li>\n        )\n    } else {\n        return (\n            <div>\n                <li>\n                    <label htmlFor={id} className={todo.complete ? \"active\" : \"\"}>\n                        <input type=\"checkbox\" id={id} checked={todo.complete}\n                        onChange={() => checkComplete(id)}/>\n                        {todo.name}\n                    </label>\n                    <button disabled={todo.complete} onClick={handleOnEdit}>Edit</button>\n                </li>\n            </div>\n        ) \n    }\n}\n","import React, {useContext} from 'react';\nimport ListItem from './ListItem';\nimport {DataContext} from './DataProvider';\n\nexport default function List() {\n    const [todos, setTodos] = useContext(DataContext);\n\n    const switchComplete = id => {\n        const newTodos = [...todos]\n        newTodos.forEach((todo, index) => {\n            if(index===id) {\n                todo.complete = !todo.complete\n            }\n        })\n        setTodos(newTodos)\n    }\n\n    const handleEditTodos = (editvalue, id) => {\n        const newTodos = [...todos]\n        newTodos.forEach((todo, index) => {\n            if (index === id) {\n                todo.name = editvalue\n            }\n        })\n        setTodos(newTodos)\n    }\n\n    return (\n        <div>\n           <ul>\n                {\n                    todos.map((todo, index) => (\n                        <ListItem todo={todo} key={index} id={index} \n                        checkComplete={switchComplete} handleEditTodos={handleEditTodos}/>\n                    ))\n                }\n            </ul> \n        </div>\n    )\n}\n","import React, {useContext, useState} from 'react';\nimport {DataContext} from './DataProvider';\n\nexport default function Footer() {\n    const [checkAll, setCheckAll] = useState(false)\n    const [todos, setTodos] = useContext(DataContext)\n\n    const handleCheckAll = () => {\n        const newTodos = [...todos]\n        newTodos.forEach(todo => {\n            todo.complete = !checkAll\n        })\n        setTodos(newTodos)\n        setCheckAll(!checkAll)\n    }\n\n    const deleteTodo = () => {\n        const newTodos = todos.filter(todo => {\n            return todo.complete === false\n        })\n        setTodos(newTodos)\n        setCheckAll(false)\n    }\n\n    return (\n        <div className=\"row\">\n            <label htmlFor=\"all\">\n                <input type=\"checkbox\" name=\"all\" id=\"all\" \n                onClick={handleCheckAll} checked={checkAll}/>\n                ALL\n            </label>\n            <p>You have {todos.length} to do</p>\n            <button id=\"delete\" onClick={deleteTodo}>Delete</button>\n        </div>\n    )\n}\n","import React from 'react';\nimport FormInput from './Components/FormInput';\nimport List from './Components/List';\nimport Footer from './Components/Footer';\nimport {DataProvider} from './Components/DataProvider';\n\nfunction App() {\n  return (\n    <DataProvider>\n      <div className=\"App\">\n        <h1>To Do List</h1>\n        <FormInput/>\n        <List/>\n        <Footer />\n      </div>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}